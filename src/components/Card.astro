---
interface CardProps {
  title: string;
  description: string;
  image: string;
  position: string;
}

const { title, description, image, position } = Astro.props;
---

<div
  class="card group relative overflow-hidden rounded-2xl border-2 border-gray-950 opacity-0 shadow-lg"
>
  <div
    class="h-full w-full rounded-2xl transition-transform duration-300 group-hover:scale-110"
  >
    <img src={image} alt={title} class="h-full w-full object-cover" />
  </div>
  <div
    class=`absolute inset-0 p-6 flex flex-col ${position} opacity-0 transition-opacity duration-300 group-hover:opacity-100 hover:bg-background-proser hover:bg-opacity-60 hover:cursor-pointer`
  >
    <p class="text-pretty text-center text-sm font-semibold text-white">
      {description}
    </p>
  </div>
</div>

<script is:inline>
  document.addEventListener("astro:page-load", initAnimations);
  document.addEventListener("astro:after-swap", initAnimations);

  function initAnimations() {
    const elements = document.querySelectorAll(".card");
    elements.forEach((el, index) => {
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              el.classList.add(
                index % 2 === 0 ? "animate-slide-right" : "animate-slide-left"
              );
              observer.unobserve(entry.target);
            }
          });
        },
        { threshold: 0.5 }
      );
      observer.observe(el);
    });
  }
</script>
